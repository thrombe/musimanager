
bugs:
  . cant init a new database, it expects that user already has the files there
    . create --init-new-db
  . yeet unnecessary uses of funcs for 2 width chars

plan:
  . maintain a song history
    . queue history?
    . save song progress and show when searching online (for discoverability)
      . a dict with just key and a number
      . songproviders and then use these when passing names
        . when online stuff, some attr in song_provider would be set true
      . mark the progress for songs that are offline too
  . maybe show a smol q besides song names so that a quickshortcut for add_to_current_queue can be added
  . song menus like newpipe instead of unique buttons for each
    . choose from here what to do with the song instead of remembering buttons
    . shortcuts can also be kept if user wants
    . add one to try load in from yt (for offline songs without metadata)
    . how to do menus for general content_providers?
  . ability to append songproviders into queues
  . multithreaing for time consuming stuff (async??)
    . including the live player info change on browser selection change 
  . show selected song/album/whatever info on the player widget and add shortcut to switch and show playing song
  . make it work offline (no crashes) 
  . maybe have general buttons for refresh, and stuff
  . have a "trigger_on_<button>" method on song provider (:pass), and have required implimentations on subclasses
  . provide shortcut to filter (sort using kinda_similar)
    . save filtered objects in a seperate variable, and use this one to get the names for objects and object from names
    . filter changes, just change the filtered list using the main list
  . allow to disable album art for the songs that do not have one
  . add a popup for showing shortcuts
  . do something useful with the bottom statusbar
  . cleanup all downloaded songs from temp_dir on exit
  . make an init func that checks and setus up the temp dirs and stuff on startup
  . show some loading thing when doing online stuff/doing stuff with songs (when the screen freezes otherwise)


dev_plan: 
  . add fucking typer
  . allow import of cookies and tokens using cli
  . add hooks/functions for external programs to use this as a microservice/package.
  . allow import from .txt and .json files (idk if this actually exists in the code)
  . make code more atomic (late goal, probably after this is stable.)
