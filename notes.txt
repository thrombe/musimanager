
bugs:
  . cant init a new database, it expects that user already has the files there
    . create --init-new-db

plan:
  . maintain a song history
    . queue history?
  . multithreaing for time consuming stuff (async??)
    . including the live player info change on browser selection change 
  . show selected song/album/whatever info on the player widget and add shortcut to switch and show playing song
  . make it work offline (no crashes) 
  . maybe have general buttons for refresh, and stuff
  . have a "trigger_on_<button>" method on song provider (:pass), and have required implimentations on subclasses
  . allow to remove the song from the playlists that already have it
    . how? the popups dont allow shortcuts
      . maybe another button to press to try remove?
      . only show the ones with tick
  . provide shortcut to search (sort using kinda_similar)
  . allow to disable album art for the songs that do not have one
  . add a popup for showing shortcuts
  . do something useful with the bottom statusbar
  . shortcut to send songs to queue (different from playlist)
  . cleanup all downloaded songs from temp_dir on exit
  . make an init func that checks and setus up the temp dirs and stuff on startup
  . show some loading thing when doing online stuff/doing stuff with songs (when the screen freezes otherwise)


dev_plan: 
  . add fucking typer
  . allow import of cookies and tokens using cli
  . add hooks/functions for external programs to use this as a microservice/package.
  . allow import from .txt and .json files (idk if this actually exists in the code)
  . make code more atomic (late goal, probably after this is stable.)
